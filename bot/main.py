import telebot
from telebot import types

bot = telebot.TeleBot('7164348876:AAEwRGX1cC0dIpiwZzFS0XgAlXFXFaCXMPk')

@bot.message_handler(commands=['start'])
def main(message):
    bot.send_message(message.chat.id, 'Добро пожаловать, я помогу вам решить вашу проблему! Опишите ее:' )


@bot.message_handler()
def info(message):
    message_text = message.text.lower()
    response = None
    #низкое качество продукта/товара
    if any(word in message_text for word in ['качество', 'брак',  'дефект', 'плохой товар', 'некачественный', 'несоответствие стандартам', 'отвратительное качество']):
        response = 'Если у вас проблемы с *качеством продукта, товара*; Начните с внедрения системы контроля качества на всех этапах производства. Проведите аудит поставщиков — возможно, сырьё или комплектующие нужно заменить. Введите чек-листы для сотрудников и запустите сбор обратной связи от клиентов (например, через короткие опросы после покупки). Для сложных случаев используйте стандарты вроде ISO или Six Sigma.'
    #высокая цена
    elif any(word in message_text for word in ['дорого', 'цена завышена', 'неоправданная стоимость', 'слишком дорогой', 'переплата', 'неконкурентная цена']):
        response = 'Если у вас проблемы с *Ценой*; Проанализируйте цепочку поставок: часто логистика или посредники увеличивают себестоимость. Перейдите на оптовые закупки, договоритесь о скидках с поставщиками или найдите локальные аналоги. Альтернативный вариант — создать «упрощённую» линейку товаров с базовым функционалом, но доступной ценой. Также эффективны акции «2 по цене 1» или накопительные скидки.'
    #слабая узнаваемость бренда
    elif any(word in message_text for word in ['марка неизвестна', 'никто не знает', 'нет рекламы', 'слабый маркетинг', 'низкая узнаваемость', 'не раскручен']):
        response = 'Если у вас проблема с *слабой узнаваемостью бренда*; Сфокусируйтесь на точечной рекламе: запустите таргетированные кампании в соцсетях (Instagram, TikTok) с упором на уникальное преимущество вашего продукта. Дайте клиентам попробовать товар бесплатно (например, пробники или демо-версии) в обмен на отзывы. Участвуйте в локальных выставках или коллаборациях с микроблогерами — это создаст «сарафанное радио».'
    #устаревшая технология
    elif any(word in message_text for word in ['утарело', 'старые технологии', 'нет инноваций', 'отстаем', 'не модернизировали', 'не автоматизировано']):
        response = 'Если у вас проблема с *устаревшей технологией*; Автоматизируйте самые затратные операции: внедрите CRM-систему (например, Битрикс24 или amoCRM) для учёта клиентов, настройте чат-ботов для обработки частых вопросов. Переведите документооборот в облачные сервисы (Google Workspace, Яндекс.Диск). Даже простая автоматизация рассылок через Mailchimp или SendPulse сэкономит десятки часов работы.'
    #плохой сервис, обслуживание
    elif any(word in message_text for word in ['хамство', 'медленно работают', 'невнимательные сотрудники', 'отвратительный сервис', 'не решают проблемы', 'грубят клиентам']):
        response = 'Если у вас проблема с *плохим сервисом*; Обучите сотрудников работать с возражениями по скриптам, добавьте бонусы за положительные отзывы. Внедрите политику «Гарантия возврата денег без вопросов» — это резко повысит доверие. Настройте оперативные каналы поддержки: чат в Telegram, быстрые ответы в соцсетях.'
    #недостаточный ассортимент
    elif any(word in message_text for word in ['мало товаров', 'скудный выбор', 'нет разнообразия', 'ограниченный ассортимент', 'нехватает вариантов', 'маленький выбор']):
        response = 'Если у вас проблема с *ассортиментом*; Расширяйте линейку продуктов за счёт сопутствующих товаров (например, к телефону — чехлы, стекло, гарантийное обслуживание). Если ресурсы ограничены, введите систему «под заказ» с предоплатой. Анализируйте запросы клиентов через опросы или данные поисковых систем (Google Trends, Яндекс.Wordstat).'
    #проблема с логистикой
    elif any(word in message_text for word in ['долгая доставка', 'теряют заказы', 'не привозят вовремя', 'сбои в поставках', 'логистика хромает', 'плохая логистика']):
        response = 'Если у вас проблема с *логистикой*; Смените транспортную компанию на более надёжную (проверьте отзывы), добавьте трек-номера для всех заказов. Для ускорения доставки создайте локальные склады в ключевых городах или перейдите на модель «самовывоз из пункта выдачи».'
    #низкая лояльность клиентов
    elif any(word in message_text for word in ['клиенты уходят', 'теряем клиентов', 'нет повторных покупок', 'низкая лояльность', 'не возращаются', 'заказывают только один раз']):
        response = 'Если у вас проблема с *клиентами*; Запустите программу лояльности: накопительные баллы, персональные скидки на дни рождения. Настройте email-рассылки не только с рекламой, но и с полезным контентом (инструкции, лайфхаки использования товара). Предлагайте «допродажи» при повторном визите («К этому товару часто берут...»).'
    #жесткая конкуренция
    elif any(word in message_text for word in ['много конкурентов', 'рынок переполнен', 'сложно выделиться', 'давят конкуренты', 'высокая конкуренция', 'мешают конкуренты']):
        response = 'Если у вас проблема с *конкуренцией*; Найдите узкую нишу: например, «экотовары для детей» вместо просто «детских товаров». Создайте уникальное торговое предложение (УТП) — например, «бесплатный ремонт в течение года». Делайте ставку на эмоции: снимайте видео-истории клиентов, показывайте производство «изнутри».'
    #юридические и регуляторные проблемы
    elif any(word in message_text for word in ['штрафы', 'проблемы с законом', 'бюрократия', 'несоответствие требованиям', 'вечные суды', 'постоянные суды', 'законодательные барьеры', 'постоянно судимся', 'подают в суд']):
        response = 'Если у вас *юридическая* проблема; Подпишитесь на рассылки регуляторов (ФАС, Роспотребнадзор), чтобы отслеживать изменения. Раз в квартал проводите аудит документов с юристом. Внедрите цифровые системы учёта (например, ЭДО для счетов) — это снизит ошибки.'
    
    if response:
        markup = types.InlineKeyboardMarkup()
        btn_yes = types.InlineKeyboardButton('👍 Помогло', callback_data='help_yes')
        btn_no = types.InlineKeyboardButton('👎 Не помогло', callback_data='help_no')
        markup.add(btn_yes, btn_no)
        
        bot.send_message(
            message.chat.id,
            response + "*Это решение помогло вам?*",
            parse_mode="Markdown",
            reply_markup=markup
        )
    else:
        bot.send_message(
            message.chat.id,
            "Не удалось определить проблему. Уточните, пожалуйста, с какими сложностями вы столкнулись?"
        )
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == 'help_yes':
        bot.edit_message_reply_markup(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=None
        )
        bot.send_message(call.message.chat.id, "Спасибо за вашу оценку! 😊")
        
    elif call.data == 'help_no':
        bot.edit_message_reply_markup(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=None
        )
        msg = bot.send_message(
            call.message.chat.id,
            "Пожалуйста, напишите, как к вам обращаться:",
            reply_markup=types.ForceReply(selective=True)
        )
        bot.register_next_step_handler(msg, ask_problem_description)

def ask_problem_description(message):
    user_name = message.text
    
    msg = bot.send_message(
        message.chat.id,
        f"Спасибо, {user_name}! Теперь опишите подробнее, что именно вас не устроило в ответе:",
        reply_markup=types.ForceReply(selective=True)
    )
    bot.register_next_step_handler(msg, lambda m: process_full_feedback(m, user_name))

def process_full_feedback(message, user_name):
    problem_description = message.text
    
    with open('feedback.txt', 'a', encoding='utf-8') as f:
        f.write(f"Пользователь: {user_name}\n")
        f.write(f"ID: {message.from_user.id}\n")
        f.write(f"Проблема: {problem_description}\n")
        f.write(f"Дата: {message.date}\n")
        f.write("="*50 + "\n")
    
    bot.send_message(
        message.chat.id,
        f"{user_name}, спасибо за ваш отзыв! Мы обязательно изучим вашу проблему и улучшим наш сервис."
    )

bot.polling(none_stop=True)